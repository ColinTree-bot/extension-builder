<title>Extension builder by ColinTree</title>

<script src="https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"></script>
<script>
function checkStatus(jobId, callback_whenDone, times = 0) {
  if (times == 80) {
    alert("time out! checked 80 times already");
    return;
  }
  setTimeout(() => {
    $.ajax({
      url: "/check-status",
      data: { jobId },
      dataType: "json",
      complete: xhr => {
        if (xhr.status == 404) {
          alert("404! maybe server is too busy to handle our request");
          return;
        } else if (xhr.status != 200) {
          alert(xhr.status + "!" + xhr.responseJSON.msg);
          return;
        }
        $("#status").text(xhr.responseJSON.status);
        if (xhr.responseJSON.status == "done") {
          callback_whenDone();
        } else {
          if (xhr.responseJSON.status == "failed") {
            $("#output").text(xhr.responseJSON.failInfo);
          } else {
            checkStatus(jobId, callback_whenDone, times + 1);
          }
        }
      }
    });
  }, 5000);
}
$(document).ready(() => {
  $("#buildWithGithubRepo").submit(() => {
    $.ajax({
      url: "/build-with-github-repo",
      data: {
        owner: $("#owner").val(),
        repo: $("#repo").val(),
        ref: $("#ref").val()
      },
      dataType: "json",
      success: json => {
        let jobId = json["jobId"];
        $("#jobId").text(jobId);
        $("#status").text("submitted");
        checkStatus(jobId, () => {
          $("#download")
          .attr("href", "/result?jobId=" + jobId)
          .parent().show();
        });
      },
      error: xhr => {
        console.log(xhr.responseJSON);
        alert(xhr.responseJSON);
      }
    });
    $("[type=submit]").prop("disabled", true);
    return false;
  });
  $("#buildWithZip").submit(() => {
    let formData = new FormData();
    formData.append("source", $("#zip")[0].files[0]);
    $.ajax({
      url: "/build-with-zip",
      type: "POST",
      cache: false,
      data: formData,
      processData: false,
      contentType: false,
      dataType: "json",
      success: json => {
        let jobId = json["jobId"];
        $("#jobId").text(jobId);
        $("#status").text("submitted");
        checkStatus(jobId, () => {
          $("#download")
          .attr("href", "/result?jobId=" + jobId)
          .parent().show();
        });
      },
      error: xhr => {
        console.log(xhr.responseJSON);
        alert(xhr.responseJSON);
      }
    });
    $("[type=submit]").prop("disabled", true);
    return false;
  });
  $("#previewRepo").click(() => {
    window.open(
        "https://github.com/" + $("#owner").val() + "/" + $("#repo").val() + "/tree/" + $("#ref").val(),
        "_blank").focus();
    return false;
  })
});
</script>

<form id="buildWithGithubRepo">
  <table>
    <tbody>
      <tr>
        <td>Owner</td> <td><input type="text" id="owner" value="OpenSourceAIX" /></td>
      </tr>
      <tr>
        <td>Repo</td> <td><input type="text" id="repo" value="ColinTreeListView" /></td>
      </tr>
      <tr>
        <td>Ref</td> <td><input type="text" id="ref" value="master" /></td>
      </tr>
    </tbody>
  </table>
  <input type="submit" />
  <button id="previewRepo">Preview repo</button>
</form>

<hr> <!-- FILE UPLOAD -->

<form id="buildWithZip" enctype="multipart/form-data">
  <input id="zip" type="file" />
  <input type="submit" />
</form>

<hr>

<p>
  jobId: <label id="jobId"></label>
</p>

<p>
  Status: <label id="status"></label>
</p>

<pre id="output"></pre>

<p style="display: none;">
  <a id="download" target="_blank">Download</a>
</p>

<p>
  <a href="https://github.com/ColinTree/extension-builder" target="_blank">This project is on github!</a>
</p>
